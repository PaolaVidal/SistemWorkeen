@model List<SisEmpleo.Models.Graficos.VacantesPorEmpresaViewModel>

@{
    
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Distribución de Vacantes por Empresa</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.2/dist/chart.umd.min.js"></script>
    
</head>
<body>
    <div class="dashboard-header text-center">
        <div class="container">
            <h1 class="dashboard-title"><i class="fas fa-building me-2"></i>Distribución de Vacantes</h1>
            <p class="dashboard-subtitle">Análisis detallado de vacantes por empresa</p>
        </div>
    </div>

    <div class="analytics-container">
        <div class="data-summary">
            <div class="summary-card">
                <div class="summary-label">Total Empresas</div>
                <div class="summary-value">@Model?.Count</div>
            </div>
            <div class="summary-card">
                <div class="summary-label">Total Vacantes</div>
                <div class="summary-value">@Model?.Sum(m => m.TotalVacantes)</div>
            </div>
            <div class="summary-card">
                <div class="summary-label">Promedio por Empresa</div>
                <div class="summary-value">@(Model?.Count > 0 ? Math.Round(Model.Average(m => m.TotalVacantes), 1) : 0)</div>
            </div>
            <div class="summary-card">
                <div class="summary-label">Empresa con más vacantes</div>
                <div class="summary-value">@(Model?.OrderByDescending(m => m.TotalVacantes).FirstOrDefault()?.Empresa ?? "N/A")</div>
            </div>
        </div>

        <div class="chart-card">
            <div class="chart-header">
                <h2 class="chart-title">Distribución de Vacantes por Empresa</h2>
                <div class="chart-actions">
                    <button class="btn btn-outline-primary" onclick="downloadChart()">
                        <i class="fas fa-download me-1"></i>Exportar
                    </button>
                    <button class="btn btn-outline-secondary" onclick="window.print()">
                        <i class="fas fa-print me-1"></i>Imprimir
                    </button>
                </div>
            </div>

            @if (Model == null || !Model.Any())
            {
                <div class="no-data-alert">
                    <i class="fas fa-exclamation-triangle fa-2x mb-3" style="color: #ffc107;"></i>
                    <h4>No hay datos disponibles</h4>
                    <p>No se encontraron registros de vacantes por empresa para mostrar el gráfico.</p>
                </div>
            }
            else
            {
                <canvas id="myChart"></canvas>
            }
        </div>
    </div>

    <div class="back-button" onclick="window.history.back()">
        <i class="fas fa-arrow-left fa-lg"></i>
    </div>

    <script>
        const labels = @Html.Raw(Json.Serialize(Model?.Select(m => m.Empresa) ?? new string[] { }));
        const data = @Html.Raw(Json.Serialize(Model?.Select(m => m.TotalVacantes) ?? new int[] { }));

        if (labels && labels.length > 0 && data && data.length > 0) {
            const ctx = document.getElementById('myChart').getContext('2d');
            const chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Número de Vacantes',
                        data: data,
                        backgroundColor: generateGradientColors(labels.length, 'rgba(54, 162, 235, 0.7)', 'rgba(153, 102, 255, 0.7)'),
                        borderColor: generateGradientColors(labels.length, 'rgba(54, 162, 235, 1)', 'rgba(153, 102, 255, 1)'),
                        borderWidth: 1,
                        borderRadius: 5
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                            labels: {
                                font: { size: 14 },
                                boxWidth: 20,
                                padding: 20
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return ` ${context.dataset.label}: ${context.raw}`;
                                }
                            },
                            displayColors: true,
                            backgroundColor: 'rgba(0,0,0,0.8)',
                            titleFont: { size: 14 },
                            bodyFont: { size: 14 },
                            padding: 12
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Número de Vacantes',
                                font: { size: 14, weight: 'bold' }
                            },
                            ticks: {
                                stepSize: 1,
                                font: { size: 12 }
                            },
                            grid: {
                                color: 'rgba(0,0,0,0.05)'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Empresas',
                                font: { size: 14, weight: 'bold' }
                            },
                            ticks: {
                                font: { size: 12 }
                            },
                            grid: {
                                display: false
                            }
                        }
                    },
                    animation: {
                        duration: 1500,
                        easing: 'easeInOutQuad'
                    }
                }
            });

            // Función para generar colores de gradiente
            function generateGradientColors(count, color1, color2) {
                const colors = [];
                for (let i = 0; i < count; i++) {
                    const ratio = i / count;
                    const r = Math.floor(parseInt(color1.slice(5, 8)) * (1 - ratio) + parseInt(color2.slice(5, 8)) * ratio);
                    const g = Math.floor(parseInt(color1.slice(10, 13)) * (1 - ratio) + parseInt(color2.slice(10, 13)) * ratio);
                    const b = Math.floor(parseInt(color1.slice(15, 18)) * (1 - ratio) + parseInt(color2.slice(15, 18)) * ratio);
                    colors.push(`rgba(${r}, ${g}, ${b}, ${color1.slice(-4, -1)})`);
                }
                return colors;
            }

            // Función para descargar el gráfico
            function downloadChart() {
                const link = document.createElement('a');
                link.download = 'Vacantes-por-Empresa.png';
                link.href = document.getElementById('myChart').toDataURL('image/png');
                link.click();
            }
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>


<style>
    :root {
        --primary-color: #3498db;
        --secondary-color: #2c3e50;
        --accent-color: #e74c3c;
        --light-bg: #f8f9fa;
        --card-shadow: 0 10px 20px rgba(0,0,0,0.1);
    }

    body {
        background-color: var(--light-bg);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        min-height: 100vh;
        margin: 0;
        padding: 0;
        color: #333;
    }

    .dashboard-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 2rem 0;
        margin-bottom: 2rem;
        border-radius: 0 0 20px 20px;
        box-shadow: var(--card-shadow);
    }

    .dashboard-title {
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .dashboard-subtitle {
        opacity: 0.9;
        font-weight: 300;
    }

    .analytics-container {
        max-width: 1200px;
        margin: 0 auto 3rem;
        padding: 0 20px;
    }

    .chart-card {
        background: white;
        border-radius: 15px;
        box-shadow: var(--card-shadow);
        padding: 2rem;
        margin-bottom: 2rem;
        border-top: 5px solid var(--primary-color);
        transition: transform 0.3s ease;
    }

        .chart-card:hover {
            transform: translateY(-5px);
        }

    .chart-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
        border-bottom: 1px solid #eee;
        padding-bottom: 1rem;
    }

    .chart-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--secondary-color);
        margin: 0;
    }

    .chart-actions .btn {
        margin-left: 0.5rem;
        border-radius: 50px;
        font-weight: 500;
    }

    #myChart {
        width: 100% !important;
        height: 400px !important;
    }

    .data-summary {
        display: flex;
        justify-content: space-around;
        flex-wrap: wrap;
        margin: 2rem 0;
    }

    .summary-card {
        background: white;
        border-radius: 10px;
        padding: 1.5rem;
        text-align: center;
        min-width: 200px;
        margin: 0.5rem;
        box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        border-left: 4px solid var(--primary-color);
    }

    .summary-value {
        font-size: 2rem;
        font-weight: 700;
        color: var(--primary-color);
        margin: 0.5rem 0;
    }

    .summary-label {
        color: #666;
        font-size: 0.9rem;
    }

    .back-button {
        position: fixed;
        bottom: 30px;
        right: 30px;
        z-index: 100;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background-color: var(--primary-color);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .back-button:hover {
            transform: scale(1.1);
            background-color: var(--secondary-color);
        }

    .no-data-alert {
        text-align: center;
        padding: 2rem;
        background-color: #fff8e1;
        border-radius: 10px;
        border-left: 5px solid #ffc107;
    }

    @@media (max-width: 768px) {
        .chart-card

    {
        padding: 1rem;
    }

    .chart-title {
        font-size: 1.2rem;
    }

    .summary-card {
        min-width: 150px;
        padding: 1rem;
    }

    .summary-value {
        font-size: 1.5rem;
    }

    }
</style>

</html>