@{
    ViewData["Title"] = "Postulantes";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Workeen - Postulantes</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <style>
        body {
            background-color: #F4F6F9;
            margin: 0;
            font-family: Arial, sans-serif;
        }

        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 20px;
        }

        .table-responsive {
            max-height: 600px;
            overflow-y: auto;
            background: #FFFFFF;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        th {
            position: sticky;
            top: 0;
            background-color: #F4F6F9;
            color: #1E3A8A;
            font-weight: bold;
            z-index: 10;
        }

        #toggleFiltros {
            background-color: #1E3A8A;
            border: none;
            color: #FFFFFF;
            padding: 0.5rem 1.5rem;
            font-weight: 600;
        }

        #filtrosPanel {
            transition: all 0.3s ease;
            background: #FFFFFF;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .btn-info {
            background-color: #1E3A8A;
            border: none;
            color: #FFFFFF;
            padding: 0.5rem 1rem;
            font-weight: 600;
        }

        .btn-secondary {
            background-color: #6B7280;
            border: none;
            color: #FFFFFF;
            padding: 0.5rem 1.5rem;
            font-weight: 600;
        }

        .scroll-container {
            max-height: 200px;
            overflow-y: auto;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            padding: 10px;
            margin-top: 5px;
        }

            .scroll-container .form-check {
                margin-bottom: 5px;
            }
    </style>
</head>
<body>
    <div class="container">
        @if (ViewBag.Error != null)
        {
            <div class="alert alert-danger">
                <h4>Error</h4>
                <p>@ViewBag.Error</p>
            </div>
        }

        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Postulantes para: @ViewBag.OfertaTitulo</h2>
            <button id="toggleFiltros" class="btn">
                <i class="fas fa-filter"></i> Mostrar Filtros
            </button>
        </div>

        <div id="filtrosPanel" class="card mb-4" style="display: none;">
            <div class="card-header bg-light">
                <h5 class="mb-0">Filtrar Postulantes</h5>
            </div>
            <div class="card-body">
                <form id="filtroForm" class="row g-3">
                    <div class="col-md-4">
                        <label for="filtroNombre" class="form-label">Nombre</label>
                        <input type="text" class="form-control filtro-input" id="filtroNombre" placeholder="Buscar por nombre" />
                    </div>
                    <div class="col-md-4">
                        <label for="filtroEmail" class="form-label">Email</label>
                        <input type="text" class="form-control filtro-input" id="filtroEmail" placeholder="Buscar por email" />
                    </div>
                    <div class="col-md-4">
                        <label for="filtroTelefono" class="form-label">Teléfono</label>
                        <input type="text" class="form-control filtro-input" id="filtroTelefono" placeholder="Buscar por teléfono" />
                    </div>

                    <div class="col-md-6">
                        <label class="form-label">Habilidades</label>
                        <div class="scroll-container" id="filtroHabilidad">
                            @foreach (var item in ViewBag.Habilidades)
                            {
                                <div class="form-check">
                                    <input class="form-check-input chkHabilidad filtro-checkbox" type="checkbox" value="@item.Text" id="hab_@item.Text" />
                                    <label class="form-check-label" for="hab_@item.Text">@item.Text</label>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="col-md-6">
                        <label class="form-label">Responsabilidades</label>
                        <div class="scroll-container" id="filtroResponsabilidad">
                            @foreach (var item in ViewBag.Responsabilidades)
                            {
                                <div class="form-check">
                                    <input class="form-check-input chkResponsabilidad filtro-checkbox" type="checkbox" value="@item.Text" id="resp_@item.Text" />
                                    <label class="form-check-label" for="resp_@item.Text">@item.Text</label>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="col-md-4">
                        <label for="filtroExperiencia" class="form-label">Experiencia</label>
                        <select class="form-select filtro-select" id="filtroExperiencia">
                            <option value="">-- Todas --</option>
                            @foreach (var item in ViewBag.ExperienciaFiltro)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                    </div>

                    <div class="col-12">
                        <div class="d-flex justify-content-end gap-2">
                            <button type="button" id="limpiarFiltros" class="btn btn-secondary">
                                <i class="fas fa-broom"></i> Limpiar
                            </button>
                            <!-- Ya no se usa botón aplicar filtros -->
                            <!-- <button type="button" id="aplicarFiltros" class="btn btn-primary">
                                <i class="fas fa-search"></i> Aplicar Filtros
                            </button> -->
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Tabla -->
        <div class="table-responsive">
            <table id="tablaPostulantes" class="table table-striped">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Email</th>
                        <th>Teléfono</th>
                       
                    </tr>
                </thead>
                <tbody>
                    @if (ViewData["Postulantes"] != null)
                    {
                        foreach (var postulante in (List<SisEmpleo.Models.Viewmodels.PostulanteViewModel>)ViewData["Postulantes"])
                        {
                            <tr class="postulante-row"
                                data-habilidades="@string.Join(",", postulante.Habilidades).ToLower()"
                                data-responsabilidades="@string.Join(",", postulante.Responsabilidades).ToLower()"
                                data-experiencia="@postulante.AniosExperiencia">
                                <td class="postulante-nombre">@postulante.Nombre</td>
                                <td class="postulante-email">@postulante.Email</td>
                                <td class="postulante-telefono">@postulante.Telefono</td>
                                <td>
                                    @* <a href="@Url.Action("VerCurriculum", "Postulante", new { idPostulante = postulante.IdPostulante })"
                                       class="btn btn-sm btn-info">
                                        <i class="fas fa-file-alt"></i> Ver CV
                                    </a> *@
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr><td colspan="4" class="text-center">No se encontraron postulantes</td></tr>
                    }
                </tbody>
            </table>
        </div>

        <a asp-action="ListarOfertas" class="btn btn-secondary mt-3">
            <i class="fas fa-arrow-left"></i> Volver a ofertas
        </a>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(function () {
            $('#toggleFiltros').click(function () {
                $('#filtrosPanel').slideToggle();
                $(this).find('i').toggleClass('fa-filter fa-times');
            });

            // Llamar aplicarFiltros cada vez que se cambia un checkbox, input o select
            $('.filtro-checkbox').change(aplicarFiltros);
            $('.filtro-input').on('input', aplicarFiltros);
            $('.filtro-select').change(aplicarFiltros);

            $('#limpiarFiltros').click(function () {
                $('#filtroNombre, #filtroEmail, #filtroTelefono').val('');
                $('.chkHabilidad, .chkResponsabilidad').prop('checked', false);
                $('#filtroExperiencia').val('');
                aplicarFiltros();
            });

            function aplicarFiltros() {
                const nombre = $('#filtroNombre').val().toLowerCase();
                const email = $('#filtroEmail').val().toLowerCase();
                const telefono = $('#filtroTelefono').val().toLowerCase();
                const habilidadesSeleccionadas = $('.chkHabilidad:checked').map(function () { return $(this).val().toLowerCase(); }).get();
                const responsabilidadesSeleccionadas = $('.chkResponsabilidad:checked').map(function () { return $(this).val().toLowerCase(); }).get();
                const experienciaFiltro = $('#filtroExperiencia').val();

                $('.postulante-row').each(function () {
                    const fila = $(this);
                    const nombreFila = fila.find('.postulante-nombre').text().toLowerCase();
                    const emailFila = fila.find('.postulante-email').text().toLowerCase();
                    const telefonoFila = fila.find('.postulante-telefono').text().toLowerCase();
                    const habilidadesFila = fila.data('habilidades') || "";
                    const responsabilidadesFila = fila.data('responsabilidades') || "";
                    const experienciaFila = parseInt(fila.data('experiencia')) || 0;

                    let visible = true;

                    // Filtrar por texto (nombre, email, teléfono)
                    if (nombre && !nombreFila.includes(nombre)) visible = false;
                    if (email && !emailFila.includes(email)) visible = false;
                    if (telefono && !telefonoFila.includes(telefono)) visible = false;

                    // Filtrar por habilidades (todos los seleccionados deben estar en la fila)
                    if (habilidadesSeleccionadas.length > 0) {
                        for (let hab of habilidadesSeleccionadas) {
                            if (!habilidadesFila.includes(hab)) {
                                visible = false;
                                break;
                            }
                        }
                    }

                    // Filtrar por responsabilidades (todos los seleccionados deben estar en la fila)
                    if (responsabilidadesSeleccionadas.length > 0) {
                        for (let resp of responsabilidadesSeleccionadas) {
                            if (!responsabilidadesFila.includes(resp)) {
                                visible = false;
                                break;
                            }
                        }
                    }

                    // Filtrar por experiencia (si se seleccionó un filtro)
                    if (experienciaFiltro) {
                        const expReq = parseInt(experienciaFiltro);
                        if (isNaN(expReq) || experienciaFila < expReq) visible = false;
                    }

                    if (visible) {
                        fila.show();
                    } else {
                        fila.hide();
                    }
                });
            }
        });
    </script>
</body>
</html>